version: "3.9"

services:

  router:
    container_name: edgar_router  # defined DNS for the container
    build:
      context: ../../..
      dockerfile: ./.ci/docker/edgar/Dockerfile
    command: /opt/managed.sh router
    #command: sleep infinity
    volumes:
      - ../../../target/ci/distribution/x86_64-unknown-linux-gnu/:/opt/artifacts
      - "../../../resources/development/tls/insecure-development-ca.pem:/etc/opendut-network/tls/ca.pem"
      - "../../../target/debug/opendut-cleo:/usr/bin/opendut-cleo"
    cap_add:
      - NET_ADMIN
    environment:
      # cleo
      - OPENDUT_CLEO_NETWORK_CARL_HOST=carl
      - OPENDUT_CLEO_NETWORK_CARL_PORT=443
      - OPENDUT_CLEO_NETWORK_TLS_DOMAIN_NAME_OVERRIDE=carl  # default developer certificate is only valid for localhost
      # testenv
      - NETBIRD_GROUP=testenv
      - OPENDUT_EDGAR_REPLICAS=4
      - OPENDUT_EDGAR_SERVICE_USER=root
      - OPENDUT_EDGAR_CLUSTER_NAME
      # dynamically provided
      - NETBIRD_API_TOKEN
      - NETBIRD_MANAGEMENT_API
      - OPENDUT_CUSTOM_CA1
      - OPENDUT_CUSTOM_CA2
      - OPENDUT_HOSTS
      # Rust backtrace
      - RUST_BACKTRACE=1

    networks:
      - opendutnet

  peer:
    build:
      context: ../../..
      dockerfile: ./.ci/docker/edgar/Dockerfile
    command: /opt/managed.sh
    #command: sleep infinity
    volumes:
      - ../../../target/ci/distribution/x86_64-unknown-linux-gnu/:/opt/artifacts
      - "../../../resources/development/tls/insecure-development-ca.pem:/etc/opendut-network/tls/ca.pem"
      - "../../../target/debug/opendut-cleo:/usr/bin/opendut-cleo"
    cap_add:
      - NET_ADMIN
    environment:
      # cleo
      - OPENDUT_CLEO_NETWORK_CARL_HOST=carl
      - OPENDUT_CLEO_NETWORK_CARL_PORT=443
      - OPENDUT_CLEO_NETWORK_TLS_DOMAIN_NAME_OVERRIDE=carl  # default developer certificate is only valid for localhost
      # testenv
      - NETBIRD_GROUP=testenv
      - OPENDUT_EDGAR_REPLICAS=4
      - OPENDUT_EDGAR_SERVICE_USER=root
      - OPENDUT_EDGAR_CLUSTER_NAME
      # dynamically provided
      - NETBIRD_SETUP_KEY
      - NETBIRD_API_TOKEN
      - NETBIRD_MANAGEMENT_API
      - OPENDUT_CUSTOM_CA1
      - OPENDUT_CUSTOM_CA2
      - OPENDUT_HOSTS
      # Rust backtrace
      - RUST_BACKTRACE=1

    deploy:
      mode: replicated
      # edgar replica count (e.g. 3)
      replicas: ${OPENDUT_EDGAR_REPLICAS}
    networks:
      - opendutnet

networks:
  opendutnet:
    name: opendut_network
    external: true  # Use a pre-existing network
